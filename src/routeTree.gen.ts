/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as StatisticImport } from './app/routes/statistic'
import { Route as SettingsImport } from './app/routes/settings'
import { Route as ProfileImport } from './app/routes/profile'
import { Route as IndexImport } from './app/routes/index'
import { Route as authSignUpImport } from './app/routes/(auth)/signUp'
import { Route as authSignInImport } from './app/routes/(auth)/signIn'

// Create/Update Routes

const StatisticRoute = StatisticImport.update({
  id: '/statistic',
  path: '/statistic',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/(auth)/signUp',
  path: '/signUp',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/signIn',
  path: '/signIn',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/statistic': {
      id: '/statistic'
      path: '/statistic'
      fullPath: '/statistic'
      preLoaderRoute: typeof StatisticImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signIn': {
      id: '/(auth)/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signUp': {
      id: '/(auth)/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/settings': typeof SettingsRoute
  '/statistic': typeof StatisticRoute
  '/signIn': typeof authSignInRoute
  '/signUp': typeof authSignUpRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/settings': typeof SettingsRoute
  '/statistic': typeof StatisticRoute
  '/signIn': typeof authSignInRoute
  '/signUp': typeof authSignUpRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/settings': typeof SettingsRoute
  '/statistic': typeof StatisticRoute
  '/(auth)/signIn': typeof authSignInRoute
  '/(auth)/signUp': typeof authSignUpRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/settings'
    | '/statistic'
    | '/signIn'
    | '/signUp'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile' | '/settings' | '/statistic' | '/signIn' | '/signUp'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/settings'
    | '/statistic'
    | '/(auth)/signIn'
    | '/(auth)/signUp'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  SettingsRoute: typeof SettingsRoute
  StatisticRoute: typeof StatisticRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  SettingsRoute: SettingsRoute,
  StatisticRoute: StatisticRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile",
        "/settings",
        "/statistic",
        "/(auth)/signIn",
        "/(auth)/signUp"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/statistic": {
      "filePath": "statistic.tsx"
    },
    "/(auth)/signIn": {
      "filePath": "(auth)/signIn.tsx"
    },
    "/(auth)/signUp": {
      "filePath": "(auth)/signUp.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
