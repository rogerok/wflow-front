/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as ProtectedImport } from './app/routes/_protected'
import { Route as IndexImport } from './app/routes/index'
import { Route as ProtectedStatisticImport } from './app/routes/_protected/statistic'
import { Route as ProtectedSettingsImport } from './app/routes/_protected/settings'
import { Route as ProtectedProfileImport } from './app/routes/_protected/profile'
import { Route as authSignUpImport } from './app/routes/(auth)/signUp'
import { Route as authSignInImport } from './app/routes/(auth)/signIn'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedStatisticRoute = ProtectedStatisticImport.update({
  id: '/statistic',
  path: '/statistic',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSettingsRoute = ProtectedSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedProfileRoute = ProtectedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProtectedRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/(auth)/signUp',
  path: '/signUp',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/signIn',
  path: '/signIn',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signIn': {
      id: '/(auth)/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signUp': {
      id: '/(auth)/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
    '/_protected/profile': {
      id: '/_protected/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings': {
      id: '/_protected/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof ProtectedSettingsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/statistic': {
      id: '/_protected/statistic'
      path: '/statistic'
      fullPath: '/statistic'
      preLoaderRoute: typeof ProtectedStatisticImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedProfileRoute: typeof ProtectedProfileRoute
  ProtectedSettingsRoute: typeof ProtectedSettingsRoute
  ProtectedStatisticRoute: typeof ProtectedStatisticRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedProfileRoute: ProtectedProfileRoute,
  ProtectedSettingsRoute: ProtectedSettingsRoute,
  ProtectedStatisticRoute: ProtectedStatisticRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/signIn': typeof authSignInRoute
  '/signUp': typeof authSignUpRoute
  '/profile': typeof ProtectedProfileRoute
  '/settings': typeof ProtectedSettingsRoute
  '/statistic': typeof ProtectedStatisticRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/signIn': typeof authSignInRoute
  '/signUp': typeof authSignUpRoute
  '/profile': typeof ProtectedProfileRoute
  '/settings': typeof ProtectedSettingsRoute
  '/statistic': typeof ProtectedStatisticRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/(auth)/signIn': typeof authSignInRoute
  '/(auth)/signUp': typeof authSignUpRoute
  '/_protected/profile': typeof ProtectedProfileRoute
  '/_protected/settings': typeof ProtectedSettingsRoute
  '/_protected/statistic': typeof ProtectedStatisticRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signIn'
    | '/signUp'
    | '/profile'
    | '/settings'
    | '/statistic'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/signIn' | '/signUp' | '/profile' | '/settings' | '/statistic'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/(auth)/signIn'
    | '/(auth)/signUp'
    | '/_protected/profile'
    | '/_protected/settings'
    | '/_protected/statistic'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected",
        "/(auth)/signIn",
        "/(auth)/signUp"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/profile",
        "/_protected/settings",
        "/_protected/statistic"
      ]
    },
    "/(auth)/signIn": {
      "filePath": "(auth)/signIn.tsx"
    },
    "/(auth)/signUp": {
      "filePath": "(auth)/signUp.tsx"
    },
    "/_protected/profile": {
      "filePath": "_protected/profile.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings": {
      "filePath": "_protected/settings.tsx",
      "parent": "/_protected"
    },
    "/_protected/statistic": {
      "filePath": "_protected/statistic.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
