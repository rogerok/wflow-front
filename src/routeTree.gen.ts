/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as ProtectedImport } from './app/routes/_protected'
import { Route as IndexImport } from './app/routes/index'
import { Route as ProtectedStatisticImport } from './app/routes/_protected/statistic'
import { Route as ProtectedReportsImport } from './app/routes/_protected/reports'
import { Route as ProtectedProfileImport } from './app/routes/_protected/profile'
import { Route as ProtectedGoalsImport } from './app/routes/_protected/goals'
import { Route as ProtectedBooksImport } from './app/routes/_protected/books'
import { Route as authSignInImport } from './app/routes/(auth)/signIn'

// Create Virtual Routes

const ProtectedSettingsLazyImport = createFileRoute('/_protected/settings')()
const authSignUpLazyImport = createFileRoute('/(auth)/signUp')()
const ProtectedGoalsIndexLazyImport = createFileRoute('/_protected/goals/')()
const ProtectedBooksIndexLazyImport = createFileRoute('/_protected/books/')()
const ProtectedGoalsCreateLazyImport = createFileRoute(
  '/_protected/goals/create',
)()
const ProtectedBooksCreateLazyImport = createFileRoute(
  '/_protected/books/create',
)()
const ProtectedBooksBookIdLazyImport = createFileRoute(
  '/_protected/books/$bookId',
)()

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedSettingsLazyRoute = ProtectedSettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => ProtectedRoute,
} as any).lazy(() =>
  import('./app/routes/_protected/settings.lazy').then((d) => d.Route),
)

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/signUp',
    path: '/signUp',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./app/routes/(auth)/signUp.lazy').then((d) => d.Route))

const ProtectedStatisticRoute = ProtectedStatisticImport.update({
  id: '/statistic',
  path: '/statistic',
  getParentRoute: () => ProtectedRoute,
} as any).lazy(() =>
  import('./app/routes/_protected/statistic.lazy').then((d) => d.Route),
)

const ProtectedReportsRoute = ProtectedReportsImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => ProtectedRoute,
} as any).lazy(() =>
  import('./app/routes/_protected/reports.lazy').then((d) => d.Route),
)

const ProtectedProfileRoute = ProtectedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProtectedRoute,
} as any).lazy(() =>
  import('./app/routes/_protected/profile.lazy').then((d) => d.Route),
)

const ProtectedGoalsRoute = ProtectedGoalsImport.update({
  id: '/goals',
  path: '/goals',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedBooksRoute = ProtectedBooksImport.update({
  id: '/books',
  path: '/books',
  getParentRoute: () => ProtectedRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/signIn',
  path: '/signIn',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedGoalsIndexLazyRoute = ProtectedGoalsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedGoalsRoute,
} as any).lazy(() =>
  import('./app/routes/_protected/goals/index.lazy').then((d) => d.Route),
)

const ProtectedBooksIndexLazyRoute = ProtectedBooksIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedBooksRoute,
} as any).lazy(() =>
  import('./app/routes/_protected/books/index.lazy').then((d) => d.Route),
)

const ProtectedGoalsCreateLazyRoute = ProtectedGoalsCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => ProtectedGoalsRoute,
} as any).lazy(() =>
  import('./app/routes/_protected/goals/create.lazy').then((d) => d.Route),
)

const ProtectedBooksCreateLazyRoute = ProtectedBooksCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => ProtectedBooksRoute,
} as any).lazy(() =>
  import('./app/routes/_protected/books/create.lazy').then((d) => d.Route),
)

const ProtectedBooksBookIdLazyRoute = ProtectedBooksBookIdLazyImport.update({
  id: '/$bookId',
  path: '/$bookId',
  getParentRoute: () => ProtectedBooksRoute,
} as any).lazy(() =>
  import('./app/routes/_protected/books/$bookId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signIn': {
      id: '/(auth)/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_protected/books': {
      id: '/_protected/books'
      path: '/books'
      fullPath: '/books'
      preLoaderRoute: typeof ProtectedBooksImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/goals': {
      id: '/_protected/goals'
      path: '/goals'
      fullPath: '/goals'
      preLoaderRoute: typeof ProtectedGoalsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/profile': {
      id: '/_protected/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/reports': {
      id: '/_protected/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ProtectedReportsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/statistic': {
      id: '/_protected/statistic'
      path: '/statistic'
      fullPath: '/statistic'
      preLoaderRoute: typeof ProtectedStatisticImport
      parentRoute: typeof ProtectedImport
    }
    '/(auth)/signUp': {
      id: '/(auth)/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/_protected/settings': {
      id: '/_protected/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof ProtectedSettingsLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/books/$bookId': {
      id: '/_protected/books/$bookId'
      path: '/$bookId'
      fullPath: '/books/$bookId'
      preLoaderRoute: typeof ProtectedBooksBookIdLazyImport
      parentRoute: typeof ProtectedBooksImport
    }
    '/_protected/books/create': {
      id: '/_protected/books/create'
      path: '/create'
      fullPath: '/books/create'
      preLoaderRoute: typeof ProtectedBooksCreateLazyImport
      parentRoute: typeof ProtectedBooksImport
    }
    '/_protected/goals/create': {
      id: '/_protected/goals/create'
      path: '/create'
      fullPath: '/goals/create'
      preLoaderRoute: typeof ProtectedGoalsCreateLazyImport
      parentRoute: typeof ProtectedGoalsImport
    }
    '/_protected/books/': {
      id: '/_protected/books/'
      path: '/'
      fullPath: '/books/'
      preLoaderRoute: typeof ProtectedBooksIndexLazyImport
      parentRoute: typeof ProtectedBooksImport
    }
    '/_protected/goals/': {
      id: '/_protected/goals/'
      path: '/'
      fullPath: '/goals/'
      preLoaderRoute: typeof ProtectedGoalsIndexLazyImport
      parentRoute: typeof ProtectedGoalsImport
    }
  }
}

// Create and export the route tree

interface ProtectedBooksRouteChildren {
  ProtectedBooksBookIdLazyRoute: typeof ProtectedBooksBookIdLazyRoute
  ProtectedBooksCreateLazyRoute: typeof ProtectedBooksCreateLazyRoute
  ProtectedBooksIndexLazyRoute: typeof ProtectedBooksIndexLazyRoute
}

const ProtectedBooksRouteChildren: ProtectedBooksRouteChildren = {
  ProtectedBooksBookIdLazyRoute: ProtectedBooksBookIdLazyRoute,
  ProtectedBooksCreateLazyRoute: ProtectedBooksCreateLazyRoute,
  ProtectedBooksIndexLazyRoute: ProtectedBooksIndexLazyRoute,
}

const ProtectedBooksRouteWithChildren = ProtectedBooksRoute._addFileChildren(
  ProtectedBooksRouteChildren,
)

interface ProtectedGoalsRouteChildren {
  ProtectedGoalsCreateLazyRoute: typeof ProtectedGoalsCreateLazyRoute
  ProtectedGoalsIndexLazyRoute: typeof ProtectedGoalsIndexLazyRoute
}

const ProtectedGoalsRouteChildren: ProtectedGoalsRouteChildren = {
  ProtectedGoalsCreateLazyRoute: ProtectedGoalsCreateLazyRoute,
  ProtectedGoalsIndexLazyRoute: ProtectedGoalsIndexLazyRoute,
}

const ProtectedGoalsRouteWithChildren = ProtectedGoalsRoute._addFileChildren(
  ProtectedGoalsRouteChildren,
)

interface ProtectedRouteChildren {
  ProtectedBooksRoute: typeof ProtectedBooksRouteWithChildren
  ProtectedGoalsRoute: typeof ProtectedGoalsRouteWithChildren
  ProtectedProfileRoute: typeof ProtectedProfileRoute
  ProtectedReportsRoute: typeof ProtectedReportsRoute
  ProtectedStatisticRoute: typeof ProtectedStatisticRoute
  ProtectedSettingsLazyRoute: typeof ProtectedSettingsLazyRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedBooksRoute: ProtectedBooksRouteWithChildren,
  ProtectedGoalsRoute: ProtectedGoalsRouteWithChildren,
  ProtectedProfileRoute: ProtectedProfileRoute,
  ProtectedReportsRoute: ProtectedReportsRoute,
  ProtectedStatisticRoute: ProtectedStatisticRoute,
  ProtectedSettingsLazyRoute: ProtectedSettingsLazyRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/signIn': typeof authSignInRoute
  '/books': typeof ProtectedBooksRouteWithChildren
  '/goals': typeof ProtectedGoalsRouteWithChildren
  '/profile': typeof ProtectedProfileRoute
  '/reports': typeof ProtectedReportsRoute
  '/statistic': typeof ProtectedStatisticRoute
  '/signUp': typeof authSignUpLazyRoute
  '/settings': typeof ProtectedSettingsLazyRoute
  '/books/$bookId': typeof ProtectedBooksBookIdLazyRoute
  '/books/create': typeof ProtectedBooksCreateLazyRoute
  '/goals/create': typeof ProtectedGoalsCreateLazyRoute
  '/books/': typeof ProtectedBooksIndexLazyRoute
  '/goals/': typeof ProtectedGoalsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/signIn': typeof authSignInRoute
  '/profile': typeof ProtectedProfileRoute
  '/reports': typeof ProtectedReportsRoute
  '/statistic': typeof ProtectedStatisticRoute
  '/signUp': typeof authSignUpLazyRoute
  '/settings': typeof ProtectedSettingsLazyRoute
  '/books/$bookId': typeof ProtectedBooksBookIdLazyRoute
  '/books/create': typeof ProtectedBooksCreateLazyRoute
  '/goals/create': typeof ProtectedGoalsCreateLazyRoute
  '/books': typeof ProtectedBooksIndexLazyRoute
  '/goals': typeof ProtectedGoalsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/(auth)/signIn': typeof authSignInRoute
  '/_protected/books': typeof ProtectedBooksRouteWithChildren
  '/_protected/goals': typeof ProtectedGoalsRouteWithChildren
  '/_protected/profile': typeof ProtectedProfileRoute
  '/_protected/reports': typeof ProtectedReportsRoute
  '/_protected/statistic': typeof ProtectedStatisticRoute
  '/(auth)/signUp': typeof authSignUpLazyRoute
  '/_protected/settings': typeof ProtectedSettingsLazyRoute
  '/_protected/books/$bookId': typeof ProtectedBooksBookIdLazyRoute
  '/_protected/books/create': typeof ProtectedBooksCreateLazyRoute
  '/_protected/goals/create': typeof ProtectedGoalsCreateLazyRoute
  '/_protected/books/': typeof ProtectedBooksIndexLazyRoute
  '/_protected/goals/': typeof ProtectedGoalsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signIn'
    | '/books'
    | '/goals'
    | '/profile'
    | '/reports'
    | '/statistic'
    | '/signUp'
    | '/settings'
    | '/books/$bookId'
    | '/books/create'
    | '/goals/create'
    | '/books/'
    | '/goals/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/signIn'
    | '/profile'
    | '/reports'
    | '/statistic'
    | '/signUp'
    | '/settings'
    | '/books/$bookId'
    | '/books/create'
    | '/goals/create'
    | '/books'
    | '/goals'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/(auth)/signIn'
    | '/_protected/books'
    | '/_protected/goals'
    | '/_protected/profile'
    | '/_protected/reports'
    | '/_protected/statistic'
    | '/(auth)/signUp'
    | '/_protected/settings'
    | '/_protected/books/$bookId'
    | '/_protected/books/create'
    | '/_protected/goals/create'
    | '/_protected/books/'
    | '/_protected/goals/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  authSignInRoute: typeof authSignInRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  authSignInRoute: authSignInRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected",
        "/(auth)/signIn",
        "/(auth)/signUp"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/books",
        "/_protected/goals",
        "/_protected/profile",
        "/_protected/reports",
        "/_protected/statistic",
        "/_protected/settings"
      ]
    },
    "/(auth)/signIn": {
      "filePath": "(auth)/signIn.tsx"
    },
    "/_protected/books": {
      "filePath": "_protected/books.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/books/$bookId",
        "/_protected/books/create",
        "/_protected/books/"
      ]
    },
    "/_protected/goals": {
      "filePath": "_protected/goals.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/goals/create",
        "/_protected/goals/"
      ]
    },
    "/_protected/profile": {
      "filePath": "_protected/profile.tsx",
      "parent": "/_protected"
    },
    "/_protected/reports": {
      "filePath": "_protected/reports.tsx",
      "parent": "/_protected"
    },
    "/_protected/statistic": {
      "filePath": "_protected/statistic.tsx",
      "parent": "/_protected"
    },
    "/(auth)/signUp": {
      "filePath": "(auth)/signUp.lazy.tsx"
    },
    "/_protected/settings": {
      "filePath": "_protected/settings.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/books/$bookId": {
      "filePath": "_protected/books/$bookId.lazy.tsx",
      "parent": "/_protected/books"
    },
    "/_protected/books/create": {
      "filePath": "_protected/books/create.lazy.tsx",
      "parent": "/_protected/books"
    },
    "/_protected/goals/create": {
      "filePath": "_protected/goals/create.lazy.tsx",
      "parent": "/_protected/goals"
    },
    "/_protected/books/": {
      "filePath": "_protected/books/index.lazy.tsx",
      "parent": "/_protected/books"
    },
    "/_protected/goals/": {
      "filePath": "_protected/goals/index.lazy.tsx",
      "parent": "/_protected/goals"
    }
  }
}
ROUTE_MANIFEST_END */
